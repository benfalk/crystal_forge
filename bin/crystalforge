#!/usr/bin/env ruby
require 'gli'
require 'crystal_forge'

include GLI::App
version CrystalForge::VERSION

# Allow a Dir to be used as a flag
accept(Dir) do |string|
  File.absolute_path(string)
end

desc 'Displays matching routes found in the api file(s)'
command :routes do |c|
  c.action do |global_opts, opts, args|
    blueprint = args.map { |file| File.read(file) }.join("\n")
    puts CrystalForge::RoutingTable.new(blueprint).pretty_format
  end
end

desc 'Runs a webserver that handles requests from the api file(s)'
command :server do |c|
  c.desc 'Specify the port to listen on'
  c.flag [:p, :port], default_value: 8080, type: Integer

  c.desc 'Serve static files from specified directory'
  c.flag [:static, :s], type: Dir, default_value: nil

  c.action do |global_opts, opts, args|
    blueprint = args.map { |file| File.read(file) }.join("\n")
    webserver = CrystalForge::WebServer.new(blueprint)
    webserver.port = opts[:port]
    webserver.static_dir = opts[:static]
    webserver.start!
  end
end

exit run(ARGV)
